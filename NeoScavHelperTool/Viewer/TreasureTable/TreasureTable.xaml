<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NeoScavHelperTool.Viewer.TreasureTable"
             xmlns:viewer="clr-namespace:NeoScavHelperTool.Viewer"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Converters="http://metro.mahapps.com/winfx/xaml/shared"
             xmlns:controlzex="urn:controlzex"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" x:Name="TreasureTableControl" x:Class="NeoScavHelperTool.Viewer.TreasureTable.TreasureTable"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Loaded="TreasureTableControl_Loaded">
    <UserControl.Resources>
        <viewer:DataGridMaxColumnsWidthConverter x:Key="DataGridMaxColumnsWidthConverter"/>
        <Style TargetType="{x:Type TextBlock}" x:Key="WrapText">
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <Style x:Key="CustomNumericUpDownStyle" TargetType="{x:Type mah:NumericUpDown}" BasedOn="{StaticResource {x:Type mah:NumericUpDown}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type mah:NumericUpDown}">
                        <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Border x:Name="Base"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Grid Margin="{TemplateBinding BorderThickness}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="PART_ButtonDownColumn" Width="Auto" />
                                    <ColumnDefinition x:Name="PART_TextBoxColumn" Width="*" />
                                    <ColumnDefinition x:Name="PART_ButtonUpColumn" Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <RepeatButton x:Name="PART_NumericDown"
                                            Grid.Column="0"
                                            Width="{TemplateBinding UpDownButtonsWidth}"
                                            VerticalContentAlignment="Center"
                                            Delay="{TemplateBinding Delay}"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsTabStop="False"
                                            Style="{DynamicResource ChromelessButtonStyle}"
                                            Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Padding, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static Converters:ThicknessSideType.Left}}">
                                    <Path x:Name="PolygonDown"
                                        Width="14"
                                        Height="14"
                                        Data="M329 354l-98 -98l98 -98l-30 -30l-128 128l128 128z"
                                        Fill="{DynamicResource GrayBrush1}"
                                        Stretch="Fill" />
                                </RepeatButton>
                                <TextBox x:Name="PART_TextBox"
                                         Grid.Column="1" 
                                         Visibility="Hidden"/>
                                <TextBox x:Name="PART_MyTextBox"
                                    Grid.Column="1"
                                    MinWidth="20"
                                    MinHeight="0"
                                    Margin="0 0 -2 0"
                                    Padding="0"
                                    HorizontalAlignment="Stretch"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    mah:ControlsHelper.DisabledVisualElementVisibility="Collapsed"
                                    mah:TextBoxHelper.ButtonContent="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                                    mah:TextBoxHelper.ButtonContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}"
                                    mah:TextBoxHelper.ButtonFontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                                    mah:TextBoxHelper.ButtonFontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                                    mah:TextBoxHelper.ButtonWidth="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                                    mah:TextBoxHelper.ButtonsAlignment="{TemplateBinding ButtonsAlignment}"
                                    mah:TextBoxHelper.ClearTextButton="{TemplateBinding mah:TextBoxHelper.ClearTextButton}"
                                    mah:TextBoxHelper.HasText="{TemplateBinding mah:TextBoxHelper.HasText}"
                                    mah:TextBoxHelper.SelectAllOnFocus="{TemplateBinding mah:TextBoxHelper.SelectAllOnFocus}"
                                    mah:TextBoxHelper.UseFloatingWatermark="{TemplateBinding mah:TextBoxHelper.UseFloatingWatermark}"
                                    mah:TextBoxHelper.Watermark="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                    mah:TextBoxHelper.WatermarkAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                    mah:TextBoxHelper.WatermarkTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}"
                                    Background="{x:Null}"
                                    BorderThickness="0"
                                    FocusVisualStyle="{x:Null}"
                                    Focusable="{TemplateBinding Focusable}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    Foreground="{TemplateBinding Foreground}"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    IsReadOnly="{TemplateBinding IsReadOnly}"
                                    IsTabStop="{TemplateBinding IsTabStop}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    TabIndex="{TemplateBinding TabIndex}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                    <TextBox.Text>
                                        <MultiBinding Converter="{local:NumericUpDownIndexTextConverter}">
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value"/>
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Maximum"/>
                                        </MultiBinding>
                                    </TextBox.Text>
                                </TextBox>
                                <RepeatButton x:Name="PART_NumericUp"
                                            Grid.Column="2"
                                            Width="{TemplateBinding UpDownButtonsWidth}"
                                            Delay="{TemplateBinding Delay}"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsTabStop="False"
                                            Style="{DynamicResource ChromelessButtonStyle}" 
                                            Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Padding, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static Converters:ThicknessSideType.Right}}">
                                    <Path x:Name="PolygonUp"
                                        Width="14"
                                        Height="14"
                                        Data="M213 384l128 -128l-128 -128l-30 30l98 98l-98 98z"
                                        Fill="{DynamicResource GrayBrush1}"
                                        Stretch="Fill" />
                                </RepeatButton>                                
                            </Grid>
                            <Border x:Name="DisabledVisualElement"
                            Background="{DynamicResource ControlsDisabledBrush}"
                            BorderBrush="{DynamicResource ControlsDisabledBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="ButtonsAlignment" Value="Left">
                                --><!--<Setter TargetName="PART_Buttons" Property="Grid.Column" Value="0" />
                                <Setter TargetName="PART_Buttons" Property="Margin" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Padding, Converter={StaticResource ThicknessBindingConverter}, ConverterParameter={x:Static Converters:ThicknessSideType.Right}}" />--><!--
                                <Setter TargetName="PART_ButtonDownColumn" Property="Width" Value="*" />
                                <Setter TargetName="PART_TextBox" Property="Grid.Column" Value="1" />
                                <Setter TargetName="PART_TextBox" Property="Margin" Value="-2 0 0 0" />
                                <Setter TargetName="PART_TextBox" Property="Margin" Value="-2 0 0 0" />
                                <Setter TargetName="PART_TextBoxColumn" Property="Width" Value="Auto" />
                                <Setter TargetName="PART_ButtonUpColumn" Property="Width" Value="*" />
                            </Trigger>-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="InterceptArrowKeys" Value="False" />
                                <Setter Property="InterceptManualEnter" Value="False" />
                                <Setter Property="InterceptMouseWheel" Value="False" />
                                <Setter TargetName="PART_NumericDown" Property="IsEnabled" Value="False" />
                                <Setter TargetName="PART_NumericUp" Property="IsEnabled" Value="False" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsReadOnly" Value="False" />
                                    <Condition Property="InterceptManualEnter" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_MyTextBox" Property="IsReadOnly" Value="True" />
                            </MultiTrigger>
                            <Trigger SourceName="PART_NumericUp" Property="IsMouseOver" Value="True">
                                <Setter TargetName="PART_NumericUp" Property="Background" Value="{DynamicResource GrayBrush8}" />
                                <Setter TargetName="PolygonUp" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                            </Trigger>
                            <Trigger SourceName="PART_NumericUp" Property="IsPressed" Value="True">
                                <Setter TargetName="PART_NumericUp" Property="Background" Value="{DynamicResource BlackBrush}" />
                                <Setter TargetName="PolygonUp" Property="Fill" Value="{DynamicResource WhiteBrush}" />
                            </Trigger>
                            <Trigger SourceName="PART_NumericDown" Property="IsMouseOver" Value="True">
                                <Setter TargetName="PART_NumericDown" Property="Background" Value="{DynamicResource GrayBrush8}" />
                                <Setter TargetName="PolygonDown" Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                            </Trigger>
                            <Trigger SourceName="PART_NumericDown" Property="IsPressed" Value="True">
                                <Setter TargetName="PART_NumericDown" Property="Background" Value="{DynamicResource BlackBrush}" />
                                <Setter TargetName="PolygonDown" Property="Fill" Value="{DynamicResource WhiteBrush}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush)}" />
                            </Trigger>
                            <Trigger SourceName="PART_MyTextBox" Property="IsFocused" Value="true">
                                <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                            </Trigger>
                            <Trigger Property="HideUpDownButtons" Value="True">
                                <Setter TargetName="PART_NumericDown" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="PART_NumericUp" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <ScrollViewer x:Name="MainViewer" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Visibility="Hidden">
        <StackPanel>
            <Label IsEnabled="False" VerticalAlignment="Top" HorizontalAlignment="Center">
                <TextBlock x:Name="Title" FontSize="20" FontWeight="Bold" TextWrapping="WrapWithOverflow" TextAlignment="Center"/>
            </Label>
            <StackPanel x:Name="TreasurePanel" HorizontalAlignment="Center" VerticalAlignment="Top"/>
            <DataGrid x:Name="DataGrid" GridLinesVisibility="All" Focusable="False" IsReadOnly="True" CanUserSortColumns="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False"  HorizontalAlignment="Center" VerticalAlignment="Center" SelectionMode="Single" HeadersVisibility="Column" SelectionUnit="Cell" PreviewMouseWheel="Control_PreviewMouseWheel" AutoGeneratingColumn="DataGrid_AutoGeneratingColumn" HorizontalScrollBarVisibility="Disabled" >
                <DataGrid.MaxColumnWidth>
                    <MultiBinding Converter="{StaticResource DataGridMaxColumnsWidthConverter}">
                        <Binding Mode="OneWay" Path="ViewportWidth" ElementName="MainViewer"/>
                        <Binding Mode="OneWay" Path="Columns[0].ActualWidth" RelativeSource="{RelativeSource Self}"/>
                    </MultiBinding>
                </DataGrid.MaxColumnWidth>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="Background" Value="Transparent"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
            </DataGrid>
        </StackPanel>
    </ScrollViewer>
</UserControl>
